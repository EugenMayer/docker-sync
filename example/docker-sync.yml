# for a simpler example, see the boilerplate at https://github.com/EugenMayer/docker-sync-boilerplate
options:
  # optional, default: docker-compose.yml if you like, you can set a custom location (path) of your compose file
  compose-file-path: 'docker-compose.yml'
  # optional, default: docker-compose-dev.yml if you like, you can set a custom location (path) of your compose file. Do not set it, if you do not want to use it at all
  # if its there, it gets used, if you name it explicitly, it HAS to exist
  compose-dev-file-path: 'docker-compose-dev.yml'
  # optional, activate this if you need to debug something, default is false
  verbose: true
  # ADVANVED: default:eugenmayer/rsync -  the image to use for the rsync container. Do not change this until you exactly know, what you are doing
  # you cannot just use "some unison" container, you entrypoint needs features, check the Dockerfiles
  rsync_image: 'eugenmayer/rsync'
  # ADVANVED: default:eugenmayer/unison -  the image to use for the unison container. Do not change this until you exactly know, what you are doing
  # you cannot just use "some unison" container, you entrypoint needs features, check the Dockerfiles
  unison_image: 'eugenmayer/unison'
syncs:
  # IMPORTANT: this name must be unique and should NOT match your real application container name!
  fullexample-sync:
    # which folder to watch / sync from - you can use tiled, it will get expanded. Be aware the then trailing slash makes a difference
    # if you add them, only the inner parts of the folder gets synced, otherwise the parent folder will be synced as top-level folder
    src: './data1/'
    # which destination on the sync-container. Since you will use volumes_from to mount this, this should match your code-deployment location in the real container
    dest: '/var/www'
    # when a port of a container is exposed, on which IP does it get exposed. Localhost for docker for mac, something else for docker-machine
    sync_host_ip: 'localhost'
    # should be a unique port this sync instance uses on the host to offer the rsync service on
    sync_host_port: 20871
    # optionl, a list of excludes for rsync - see rsync docs for details
    sync_excludes: ['Gemfile.lock', 'Gemfile', 'config.rb', '.sass-cache/', 'sass/', 'sass-cache/', 'composer.json' , 'bower.json', 'package.json', 'Gruntfile*', 'bower_components/', 'node_modules/', '.gitignore', '.git/', '*.coffee', '*.scss', '*.sass']
    # optional: use this to switch to rsync verbose mode
    sync_args: '-v'
    # optional, a list of regular expressions to exclude from the fswatch - see fswatch docs for details

    # optional, default
    sync_strategy: 'rsync'

    # optional, use this to map the files to a specific user on sync. Helps fixing permissions. You can use names and uids
    sync_user: 'test'
    # this does not user groupmap but rather configures the server to map
    # optional: usually if you map users you want to set the user id of your application container here
    sync_userid: '5000'
    # optional, use this to map the files to a specific group on sync. Helps fixing permissions, You can use names and guids
    sync_group: 'testgroup'
    # optional: usually if you map groups you want to set the group id of your application container here
    # this does not user groupmap but rather configures the server to map
    sync_groupid: '6000'

    watch_excludes: ['.*/.git', '.*/node_modules', '.*/bower_components', '.*/sass-cache', '.*/.sass-cache', '.*/.sass-cache', '.coffee', '.scss', '.sass', '.gitignore']
    # optional: use this to switch to fswatch verbose mode
    watch_args: '-v'
    # optional: default is fswatch, if set to disable, no watcher will be used and you would need to start the sync manually
    watch_strategy: 'fswatch'
  simpleexample-sync: # IMPORTANT: this name must be unique and should NOT match your real application container name!
    src: './data2/'
    dest: '/app/code'
    sync_host_ip: 'localhost'
    sync_host_port: 20872
    sync_strategy: 'unison' # this time we pick unison
